---
# ============ ZOOKEEPER DEPLOYMENT ============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: weather-system
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: bitnami/zookeeper:3.9
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2181
          name: client
          protocol: TCP
        - containerPort: 2888
          name: server
          protocol: TCP
        - containerPort: 3888
          name: leader-election
          protocol: TCP
        env:
        - name: ZOO_CFG_EXTRA
          value: "tickTime=2000 dataDir=/var/lib/zookeeper/data"
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: data
          mountPath: /var/lib/zookeeper/data
        - name: datalog
          mountPath: /var/lib/zookeeper/datalog
      volumes:
      - name: data
        emptyDir: {}
      - name: datalog
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: weather-system
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
    protocol: TCP
    name: client
  - port: 2888
    targetPort: 2888
    protocol: TCP
    name: server
  - port: 3888
    targetPort: 3888
    protocol: TCP
    name: leader-election
  type: ClusterIP
---
# ============ KAFKA BROKER DEPLOYMENT ============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: weather-system
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.7
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: broker
          protocol: TCP
        - containerPort: 29092
          name: internal
          protocol: TCP
        env:
        - name: KAFKA_CFG_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT_INTERNAL"
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_LOG_RETENTION_HOURS
          value: "24"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_CFG_LOG_CLEANUP_POLICY
          value: "delete"
        - name: KAFKA_CFG_NUM_NETWORK_THREADS
          value: "4"
        - name: KAFKA_CFG_NUM_IO_THREADS
          value: "4"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 40
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: weather-system
  labels:
    app: kafka
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
    name: broker
  - port: 29092
    targetPort: 29092
    protocol: TCP
    name: internal
  type: ClusterIP
